# This workflow will build, package and Sign iOS, Android Apps and publish it to Firebase APP Distribute.
#
# To configure this workflow:
#
# 1. Set up Android secrets in your workspace: 
#   * ANDROID_SIGN_KEY_BASE_64 The base64 encoded signing key used to sign the android app.
#   * ANDROID_SIGN_KEY_ALIAS The alias of your signing key.
#   * ANDROID_SIGN_KEY_STORE_PASS The alias of your signing key.
#   * ANDROID_SIGN_KEY_PASSWORD The private key password for your signing keystore.
# 
# 2. Set up iOS secrets in your workspace:

name: Build, Package, Sign and Deploy iOS & Android Apps
on:
  pull_request:
    branches:
      - master
    paths:
      - "maintemplate/client/**"
      - ".github/workflows/**"
  push:
    branches: 
      - master
    paths:
      - "maintemplate/client/**"
      - ".github/workflows/**"

jobs:
  build-package-android:
   name: "Build, Package, Sign and Deploy Android App"
   runs-on: ubuntu-latest
   steps:
     - name: Cloning repository
       uses: actions/checkout@v2.0.0
     - uses: subosito/flutter-action@v1.2.0
       with:
         channel: beta
     - name: Setting Up Flutter SDK
       run: flutter pub get
       working-directory: maintemplate/client/       
     - name: Running build runner
       run: flutter pub run build_runner build --delete-conflicting-outputs
       working-directory: maintemplate/client/
     - name: building Android APK
       run: flutter build apk --release
       working-directory: maintemplate/client/
     - name: sign Android APK
       uses: r0adkll/sign-android-release@v1
       with:
        releaseDirectory: maintemplate/client/build/app/outputs/apk/release
        signingKeyBase64: ${{ secrets.ANDROID_SIGN_KEY_BASE_64 }}
        alias: ${{ secrets.ANDROID_SIGN_KEY_ALIAS }}
        keyStorePassword: ${{ secrets.ANDROID_SIGN_KEY_STORE_PASS }}
        keyPassword: ${{ secrets.ANDROID_SIGN_KEY_PASSWORD }}  
     - name: Upload APK artifact to github release section
       uses: marvinpinto/action-automatic-releases@latest
       with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true  
        files: ${{ env.SIGNED_RELEASE_FILE }}
  build-package-ios:
   name: "Build, Package, Sign and Deploy iOS App"
   runs-on: macos-latest
   steps:
     - name: Cloning repository
       uses: actions/checkout@v2.0.0
     - uses: subosito/flutter-action@v1.2.0
       with:
         channel: beta
     - name: Setting Up Flutter SDK
       run: flutter pub get
       working-directory: maintemplate/client/       
     - name: Running build runner
       run: flutter pub run build_runner build --delete-conflicting-outputs
       working-directory: maintemplate/client/
     - name: Building iOS IPA
       run: flutter build ios --release #--no-codesign
       working-directory: maintemplate/client/
