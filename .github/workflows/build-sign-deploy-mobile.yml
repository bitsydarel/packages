# This workflow will build, package and Sign iOS, Android Apps and publish it to Firebase APP Distribute.
#
# To configure this workflow:
#
# 1. Set up Android secrets in your workspace: 
#   * ANDROID_SIGN_KEY_BASE_64 The base64 encoded signing key used to sign the android app.
#   * ANDROID_SIGN_KEY_ALIAS The alias of your signing key.
#   * ANDROID_SIGN_KEY_STORE_PASS The alias of your signing key.
#   * ANDROID_SIGN_KEY_PASSWORD The private key password for your signing keystore.
# 
# 2. Set up iOS secrets in your workspace:

name: Build, Package, Sign and Deploy iOS & Android Apps
on:
  pull_request:
    branches:
      - master
    paths:
      - "maintemplate/client/**"
      - ".github/workflows/**"
  push:
    branches: 
      - master
    paths:
      - "maintemplate/client/**"
      - ".github/workflows/**"

env:
  ANDROID_SIGN_KEY_BASE_64: ${{ secrets.ANDROID_SIGN_KEY_BASE_64 }}
  ANDROID_SIGN_KEY_ALIAS: ${{ secrets.ANDROID_SIGN_KEY_ALIAS }}
  ANDROID_SIGN_KEY_STORE_PASS: ${{ secrets.ANDROID_SIGN_KEY_STORE_PASS }}
  ANDROID_SIGN_KEY_PASSWORD: ${{ secrets.ANDROID_SIGN_KEY_PASSWORD }}

jobs:
  build-package:
   name: "Build and Package"
   runs-on: [macos-latest]
   steps:
     - name: Cloning repository
       uses: actions/checkout@v2.0.0
     - uses: subosito/flutter-action@v1.2.0
       with:
         channel: beta
     - name: Setting Up Flutter SDK
       run: flutter pub get
       working-directory: maintemplate/client/       
     - name: building Android APK
       run: flutter build apk --debug
       working-directory: maintemplate/client/

